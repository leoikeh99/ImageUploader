[{"C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\components\\UploadImage.js":"3","C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\helperFunctions.js":"4","C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\components\\Spinner.js":"5","C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\components\\Uploads.js":"6"},{"size":197,"mtime":1608464057037,"results":"7","hashOfConfig":"8"},{"size":676,"mtime":1608550817424,"results":"9","hashOfConfig":"8"},{"size":4367,"mtime":1608624600070,"results":"10","hashOfConfig":"8"},{"size":268,"mtime":1608469711564,"results":"11","hashOfConfig":"8"},{"size":343,"mtime":1608538218495,"results":"12","hashOfConfig":"8"},{"size":1270,"mtime":1608550333119,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"czdx2w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\index.js",[],["29","30"],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\App.js",["31"],"import React, { Fragment, useState } from \"react\";\nimport UploadImage from \"./components/UploadImage\";\nimport Uploads from \"./components/Uploads\";\nimport \"./App.css\";\nimport \"./css/spinkit.min.css\";\n\nfunction App() {\n  const [page, setPage] = useState(1);\n  return (\n    <Fragment>\n      <div className=\"cover\">\n        {page === 1 ? (\n          <UploadImage setPage={setPage} />\n        ) : (\n          <Uploads setPage={setPage} />\n        )}\n      </div>\n      <div className=\"text-center\">\n        Challenge completed by\n        <a href=\"https://github.com/leoikeh99\" target=\"_blank\">\n          @wazza\n        </a>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\components\\UploadImage.js",["32","33"],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\helperFunctions.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\components\\Spinner.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\imageUploader\\client\\src\\components\\Uploads.js",["34","35"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst Uploads = ({ setPage }) => {\r\n  const [ids, setIds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"ids\")) {\r\n      setIds(JSON.parse(localStorage.getItem(\"ids\")));\r\n    }\r\n  }, []);\r\n\r\n  const copyText = (link) => {\r\n    copy(link);\r\n    alert(\"Link copied to clipboard\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"uploads\">\r\n      <h3>Image Uploads</h3>\r\n      {ids.length === 0 ? (\r\n        <p style={{ margin: \"10px\" }}>No images have been uploaded yet</p>\r\n      ) : (\r\n        <div>\r\n          {ids.map((id) => (\r\n            <div className=\"item\">\r\n              <img\r\n                className=\"image\"\r\n                src={`http://localhost:5000/image/${id}`}\r\n              />\r\n              <p>{`http://localhost:5000/image/${id}`}</p>\r\n              <button\r\n                className=\"btn-primary btn-1\"\r\n                onClick={() => copyText(`http://localhost:5000/image/${id}`)}\r\n              >\r\n                Copy\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <i class=\"fas fa-arrow-left\" onClick={() => setPage(1)}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploads;\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":20,"column":48,"nodeType":"42","endLine":20,"endColumn":63},{"ruleId":"43","severity":1,"message":"44","line":28,"column":6,"nodeType":"45","endLine":28,"endColumn":10,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":50,"column":6,"nodeType":"45","endLine":50,"endColumn":13,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":27,"column":15,"nodeType":"55","endLine":30,"endColumn":17},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loader'. Either include it or remove the dependency array.","ArrayExpression",["58"],"React Hook useEffect has a missing dependency: 'ids'. Either include it or remove the dependency array. You can also do a functional update 'setIds(i => ...)' if you only need 'ids' in the 'setIds' call.",["59"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [id, loader]",{"range":"64","text":"65"},"Update the dependencies array to be: [ids, image]",{"range":"66","text":"67"},[948,952],"[id, loader]",[1572,1579],"[ids, image]"]